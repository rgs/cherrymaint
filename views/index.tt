<script type="text/javascript">
function votesCount(commit) {
    return $('#votes' + commit).html().split(' ').length;
}
function userHasVoted(user,commit) {
    var votes  = $('#votes' + commit).html().split(' ');
    for (var i = 0; i < votes.length; i++) {
        if (votes[i] == user) {
            return true;
        }
    }
    return false;
}
function currentUserHasVoted(commit) {
    return userHasVoted($('#username').val(), commit);
}
var statusList = [
 'Unexamined',
 'Rejected',
 'Requested',
 'Seconded',
 'Approved',
 'Cherry-picked',
 'To be discussed',
];
var upvoteMap = [
 2,
 -1,
 3,
 4,
 -1,
 -1,
 -1,
];
var downvoteMap = [
 -1,
 -1,
 0,
 2,
 3,
 -1,
 -1,
];
function markCommit(commit,value) {
    $.ajax({
        url: '/mark?commit=' + commit + '&value=' + value + '&branch=<% branch %>',
        type: 'GET',
        dataType: 'html',
        cache: false,
        async: false,
        success: function(res) {
            var tokens = res.split(' ');
            var status = tokens.shift();
            var voters = tokens.join(' ');
            for (var i = 0; i < statusList.length; i++) {
                $('#tr' + commit).removeClass("status" + i);
            }
            $('#tr' + commit).addClass('status' + status);
            $('#votes' + commit).html(voters);
            var options = '';
            for (var i = 0; i < statusList.length; i++) {
                var selected = i == status ? 'selected' : '';
                options += '<option value="' + i + '" ' + selected + '>'
                           + statusList[i]
                           + '</option>';
            }
            $('#pick' + commit).html(options);
            var updownlabel = '';
            var hasvoted = currentUserHasVoted(commit);
            if (hasvoted) {
                updownlabel = downvoteMap[status] >= 0 ? '-1' : 'N/A';
            }
            else {
                updownlabel = upvoteMap[status] >= 0   ? '+1' : 'N/A';
            }
            $('#updown' + commit).html(updownlabel);
        },
        error: function(req, st, error) {
            alert("Couldn't update the DB");
        }
    });
}
function updownvoteCommit(commit) {
    var value     = $('#pick' + commit).val();
    var new_value = currentUserHasVoted(commit) ? downvoteMap[value]
                                                : upvoteMap[value];
    if (new_value >= 0) {
        markCommit(commit, new_value);
    }
}
function reloadLimit(old_page, old_limit, new_limit) {
    var start = old_page * old_limit;
    var new_page = 0;
    if (new_limit != 0) {
        new_page = Math.floor(start / new_limit);
    }
    window.location = '/?page=' + new_page + '&limit=' + new_limit + '&branch=<% branch %>&filt=<% filt %>';
}
function toggleRejected() {
    if ($('#togglerej').html() == 'Hide') {
        $('#togglerej').html('Show');
        $('.status1').fadeOut();
    }
    else {
        $('#togglerej').html('Hide');
        $('.status1').show();
    }
}
function toggleFiltered() {
    document.location.href = document.location.href.replace(/&?filt=\d*/,'')
        + (document.location.href.match(/\?/) ? '' : '?')
        + 'filt=<% !filt %>';
}
</script>
<% IF !ro %>
<input type="hidden" id="username" value="<% user %>">
<p>Welcome, <% user %>. Please make yourself familiar with the
<a href="http://perl5.git.perl.org/perl.git/blob_plain/refs/heads/blead:/pod/perlpolicy.pod" target="_blank">maintenance policy</a>
before proceeding. We have some
<a href="/stats?branch=<% branch %>&filt=<% filt %>">rudimentary statistics about the examination progress</a>.
<br />
<% END %>
<input onChange="toggleFiltered()" type="checkbox" <% IF filt %>checked<% END %> />
Filter out rejected and unexamined commits
<% UNLESS filt %>
|
<button onClick="javascript:toggleRejected()"><span id="togglerej">Hide</span> rejected commits</button>
<% END %>
</p>
<p class="pages">
<% FILTER collapse %>
 <% IF cur_page > 0 %>
<a href="/?page=<% cur_page - 1 %>&limit=<% limit %>&ro=<% ro %>&branch=<% branch %>&filt=<% filt %>">Newer</a>
 <% ELSE %>
Newer
 <% END %>
-
 <% FOREACH page IN pages %>
  <% IF page.1 %>
<% page.0 %>
  <% ELSE %>
<a href="/?page=<% page.0 %>&limit=<% limit %>&ro=<% ro %>&branch=<% branch %>&filt=<% filt %>"><% page.0 %></a>
  <% END %>
 <% END %>
-
 <% IF cur_page < last_page %>
<a href="/?page=<% cur_page + 1 %>&limit=<% limit %>&ro=<% ro %>&branch=<% branch %>&filt=<% filt %>">Older</a>
 <% ELSE %>
Older
 <% END %>
<% END %>
-
<label for="limit">Limit : </label>
<input type="text" id="limit" size="2" value="<% limit %>" onChange="reloadLimit(<% cur_page %>, <% limit %>, this.value)">
</p>
<table>
<% FOREACH commit IN commits %>
<tr id="tr<% commit.sha1 %>" class="status<% commit.status %>">
<td>
<% IF ro %>
<% commit.status == 0 ? "Unexamined" : "" %>
<% commit.status == 1 ? "Rejected" : "" %>
<% commit.status == 2 ? "Requested" : "" %>
<% commit.status == 3 ? "Seconded" : "" %>
<% commit.status == 4 ? "Approved" : "" %>
<% commit.status == 5 ? "Cherry-picked" : "" %>
<% commit.status == 6 ? "To be discussed" : "" %>
<% ELSE %>
<button id="updown<% commit.sha1 %>" onClick="updownvoteCommit('<% commit.sha1 %>')" style="width: 4em"><% commit.updownlabel %></button>
<select id="pick<% commit.sha1 %>" onChange="markCommit('<% commit.sha1 %>',this.value)">
<option value="0" <% commit.status == 0 ? "selected" : "" %>>Unexamined</option>
<option value="1" <% commit.status == 1 ? "selected" : "" %>>Rejected</option>
<option value="2" <% commit.status == 2 ? "selected" : "" %>>Requested</option>
<option value="3" <% commit.status == 3 ? "selected" : "" %>>Seconded</option>
<option value="4" <% commit.status == 4 ? "selected" : "" %>>Approved</option>
<option value="5" <% commit.status == 5 ? "selected" : "" %>>Cherry-picked</option>
<option value="6" <% commit.status == 6 ? "selected" : "" %>>To be discussed</option>
</select>
<% END %>
</td>
<td><a href="http://perl5.git.perl.org/perl.git/commitdiff/<% commit.sha1 %>" target="perldiff"><% commit.sha1 %></a></td>
<td><% commit.msg %></td>
<td class="vote" id="votes<% commit.sha1 %>">
<% FILTER collapse %>
 <% FOREACH user IN commit.votes %>
  <% user %>
 <% END %>
<% END %>
</td>
</tr>
<% END %>
</table>
